{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./text-to-speech.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./text-to-speech.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common'; // For common directives\nimport { FormsModule } from '@angular/forms'; // For template-driven forms\nimport { ApiService } from '../api.service';\nlet TextToSpeechComponent = class TextToSpeechComponent {\n  apiService;\n  selectedFile = null;\n  audioUrl = null; // Store the audio file URL\n  progress = 0; // Progress percentage\n  isProcessing = false; // Indicates if the file is being processed\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  // Handle file selection via input\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n    this.audioUrl = null; // Reset the audio URL when a new file is selected\n    this.progress = 0; // Reset progress\n  }\n  // Convert the file to speech\n  convertTextToSpeech() {\n    if (!this.selectedFile) {\n      alert('Please select a file.');\n      return;\n    }\n    this.isProcessing = true;\n    this.progress = 0;\n    // Listen for progress updates\n    const eventSource = new EventSource('http://localhost:8000/progress');\n    eventSource.onmessage = event => {\n      this.progress = parseInt(event.data, 10);\n      if (this.progress >= 100) {\n        eventSource.close(); // Stop listening when progress reaches 100%\n      }\n    };\n    // Send the file to the backend\n    this.apiService.textToSpeech(this.selectedFile).subscribe(response => {\n      // Create a URL for the audio file\n      this.audioUrl = window.URL.createObjectURL(response);\n      this.isProcessing = false;\n    }, error => {\n      console.error('Error converting text to speech:', error);\n      alert('An error occurred while converting the file. Please try again.');\n      this.isProcessing = false;\n    });\n  }\n  static ctorParameters = () => [{\n    type: ApiService\n  }];\n};\nTextToSpeechComponent = __decorate([Component({\n  selector: 'app-text-to-speech',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  // Import standalone components/directives\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], TextToSpeechComponent);\nexport { TextToSpeechComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","ApiService","TextToSpeechComponent","apiService","selectedFile","audioUrl","progress","isProcessing","constructor","onFileSelected","event","target","files","convertTextToSpeech","alert","eventSource","EventSource","onmessage","parseInt","data","close","textToSpeech","subscribe","response","window","URL","createObjectURL","error","console","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["/Users/jamielabed/Documents/GitHub/Text_To_Speech/webapp/frontend/src/app/text-to-speech/text-to-speech.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common'; // For common directives\nimport { FormsModule } from '@angular/forms'; // For template-driven forms\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-text-to-speech',\n  standalone: true,\n  imports: [CommonModule, FormsModule], // Import standalone components/directives\n  templateUrl: './text-to-speech.component.html',\n  styleUrls: ['./text-to-speech.component.css']\n})\nexport class TextToSpeechComponent {\n  selectedFile: File | null = null;\n  audioUrl: string | null = null; // Store the audio file URL\n  progress: number = 0; // Progress percentage\n  isProcessing: boolean = false; // Indicates if the file is being processed\n\n  constructor(private apiService: ApiService) {}\n\n  // Handle file selection via input\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n    this.audioUrl = null; // Reset the audio URL when a new file is selected\n    this.progress = 0; // Reset progress\n  }\n\n  // Convert the file to speech\n  convertTextToSpeech() {\n    if (!this.selectedFile) {\n      alert('Please select a file.');\n      return;\n    }\n\n    this.isProcessing = true;\n    this.progress = 0;\n\n    // Listen for progress updates\n    const eventSource = new EventSource('http://localhost:8000/progress');\n    eventSource.onmessage = (event) => {\n      this.progress = parseInt(event.data, 10);\n      if (this.progress >= 100) {\n        eventSource.close(); // Stop listening when progress reaches 100%\n      }\n    };\n\n    // Send the file to the backend\n    this.apiService.textToSpeech(this.selectedFile).subscribe(\n      (response: Blob) => {\n        // Create a URL for the audio file\n        this.audioUrl = window.URL.createObjectURL(response);\n        this.isProcessing = false;\n      },\n      (error) => {\n        console.error('Error converting text to speech:', error);\n        alert('An error occurred while converting the file. Please try again.');\n        this.isProcessing = false;\n      }\n    );\n  }\n}"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,YAAY,QAAQ,iBAAiB,CAAC,CAAC;AAChD,SAASC,WAAW,QAAQ,gBAAgB,CAAC,CAAC;AAC9C,SAASC,UAAU,QAAQ,gBAAgB;AASpC,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAMZC,UAAA;EALpBC,YAAY,GAAgB,IAAI;EAChCC,QAAQ,GAAkB,IAAI,CAAC,CAAC;EAChCC,QAAQ,GAAW,CAAC,CAAC,CAAC;EACtBC,YAAY,GAAY,KAAK,CAAC,CAAC;EAE/BC,YAAoBL,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAE7C;EACAM,cAAcA,CAACC,KAAU;IACvB,IAAI,CAACN,YAAY,GAAGM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACzC,IAAI,CAACP,QAAQ,GAAG,IAAI,CAAC,CAAC;IACtB,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC,CAAC;EACrB;EAEA;EACAO,mBAAmBA,CAAA;IACjB,IAAI,CAAC,IAAI,CAACT,YAAY,EAAE;MACtBU,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IAEA,IAAI,CAACP,YAAY,GAAG,IAAI;IACxB,IAAI,CAACD,QAAQ,GAAG,CAAC;IAEjB;IACA,MAAMS,WAAW,GAAG,IAAIC,WAAW,CAAC,gCAAgC,CAAC;IACrED,WAAW,CAACE,SAAS,GAAIP,KAAK,IAAI;MAChC,IAAI,CAACJ,QAAQ,GAAGY,QAAQ,CAACR,KAAK,CAACS,IAAI,EAAE,EAAE,CAAC;MACxC,IAAI,IAAI,CAACb,QAAQ,IAAI,GAAG,EAAE;QACxBS,WAAW,CAACK,KAAK,EAAE,CAAC,CAAC;MACvB;IACF,CAAC;IAED;IACA,IAAI,CAACjB,UAAU,CAACkB,YAAY,CAAC,IAAI,CAACjB,YAAY,CAAC,CAACkB,SAAS,CACtDC,QAAc,IAAI;MACjB;MACA,IAAI,CAAClB,QAAQ,GAAGmB,MAAM,CAACC,GAAG,CAACC,eAAe,CAACH,QAAQ,CAAC;MACpD,IAAI,CAAChB,YAAY,GAAG,KAAK;IAC3B,CAAC,EACAoB,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDb,KAAK,CAAC,gEAAgE,CAAC;MACvE,IAAI,CAACP,YAAY,GAAG,KAAK;IAC3B,CAAC,CACF;EACH;;;;;AA/CWL,qBAAqB,GAAA2B,UAAA,EAPjC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,oBAAoB;EAC9BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACjC,YAAY,EAAEC,WAAW,CAAC;EAAE;EACtCiC,QAAA,EAAAC,oBAA8C;;CAE/C,CAAC,C,EACWhC,qBAAqB,CAgDjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}