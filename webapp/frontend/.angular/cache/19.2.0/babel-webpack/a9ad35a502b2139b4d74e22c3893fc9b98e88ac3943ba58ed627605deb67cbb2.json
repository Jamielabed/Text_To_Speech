{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nfunction TextToSpeechComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"Selected file: \", ctx_r0.selectedFile.name, \"\");\n  }\n}\nexport let TextToSpeechComponent = /*#__PURE__*/(() => {\n  class TextToSpeechComponent {\n    apiService;\n    selectedFile = null;\n    constructor(apiService) {\n      this.apiService = apiService;\n    }\n    // Handle file selection via input\n    onFileSelected(event) {\n      this.selectedFile = event.target.files[0];\n    }\n    // Handle file drop\n    onFileDropped(event) {\n      event.preventDefault();\n      if (event.dataTransfer?.files) {\n        this.selectedFile = event.dataTransfer.files[0];\n      }\n    }\n    // Allow drag-over event\n    onDragOver(event) {\n      event.preventDefault();\n    }\n    // Convert the file to speech\n    convertTextToSpeech() {\n      if (!this.selectedFile) {\n        alert('Please select a file.');\n        return;\n      }\n      this.apiService.textToSpeech(this.selectedFile).subscribe(response => {\n        const audioUrl = window.URL.createObjectURL(response);\n        const link = document.createElement('a');\n        link.href = audioUrl;\n        link.download = 'output.mp3';\n        link.click();\n        window.URL.revokeObjectURL(audioUrl);\n      }, error => {\n        console.error('Error converting text to speech:', error);\n        alert('An error occurred while converting the file. Please try again.');\n      });\n    }\n    static ɵfac = function TextToSpeechComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TextToSpeechComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TextToSpeechComponent,\n      selectors: [[\"app-text-to-speech\"]],\n      decls: 10,\n      vars: 2,\n      consts: [[1, \"file-upload-container\"], [\"type\", \"file\", \"accept\", \".txt\", 3, \"change\"], [1, \"drop-zone\", 3, \"drop\", \"dragover\"], [3, \"click\", \"disabled\"], [4, \"ngIf\"]],\n      template: function TextToSpeechComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Upload a Text File\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 1);\n          i0.ɵɵlistener(\"change\", function TextToSpeechComponent_Template_input_change_3_listener($event) {\n            return ctx.onFileSelected($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 2);\n          i0.ɵɵlistener(\"drop\", function TextToSpeechComponent_Template_div_drop_4_listener($event) {\n            return ctx.onFileDropped($event);\n          })(\"dragover\", function TextToSpeechComponent_Template_div_dragover_4_listener($event) {\n            return ctx.onDragOver($event);\n          });\n          i0.ɵɵelementStart(5, \"p\");\n          i0.ɵɵtext(6, \"Drag and drop a file here\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function TextToSpeechComponent_Template_button_click_7_listener() {\n            return ctx.convertTextToSpeech();\n          });\n          i0.ɵɵtext(8, \" Convert to Speech \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, TextToSpeechComponent_p_9_Template, 2, 1, \"p\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"disabled\", !ctx.selectedFile);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n        }\n      },\n      dependencies: [i2.NgIf],\n      styles: [\".file-upload-container[_ngcontent-%COMP%]{max-width:400px;margin:0 auto;padding:20px;text-align:center;border:2px dashed #ccc;border-radius:10px}input[type=file][_ngcontent-%COMP%]{display:none}.drop-zone[_ngcontent-%COMP%]{padding:20px;margin:20px 0;border:2px dashed #007bff;border-radius:10px;background-color:#f9f9f9;cursor:pointer}.drop-zone[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0;color:#007bff}button[_ngcontent-%COMP%]{margin-top:20px;padding:10px 20px;background-color:#007bff;color:#fff;border:none;border-radius:5px;cursor:pointer}button[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}\"]\n    });\n  }\n  return TextToSpeechComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}