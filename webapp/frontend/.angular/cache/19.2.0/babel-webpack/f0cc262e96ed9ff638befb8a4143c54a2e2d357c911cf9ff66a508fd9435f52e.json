{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./text-to-speech.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./text-to-speech.component.css?ngResource\";\nimport { Component } from '@angular/core';\nimport { ApiService } from '../api.service';\nlet TextToSpeechComponent = class TextToSpeechComponent {\n  apiService;\n  selectedFile = null;\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  convertTextToSpeech() {\n    if (!this.selectedFile) {\n      alert('Please select a file.');\n      return;\n    }\n    this.apiService.textToSpeech(this.selectedFile).subscribe(response => {\n      const audioUrl = window.URL.createObjectURL(response);\n      const link = document.createElement('a');\n      link.href = audioUrl;\n      link.download = 'output.mp3';\n      link.click();\n      window.URL.revokeObjectURL(audioUrl);\n    });\n  }\n  static ctorParameters = () => [{\n    type: ApiService\n  }];\n};\nTextToSpeechComponent = __decorate([Component({\n  selector: 'app-text-to-speech',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], TextToSpeechComponent);\nexport { TextToSpeechComponent };","map":{"version":3,"names":["Component","ApiService","TextToSpeechComponent","apiService","selectedFile","constructor","onFileSelected","event","target","files","convertTextToSpeech","alert","textToSpeech","subscribe","response","audioUrl","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["/Users/jamielabed/Documents/GitHub/Text_To_Speech/app/frontend/src/app/text-to-speech/text-to-speech.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-text-to-speech',\n  templateUrl: './text-to-speech.component.html',\n  styleUrls: ['./text-to-speech.component.css']\n})\nexport class TextToSpeechComponent {\n  selectedFile: File | null = null;\n\n  constructor(private apiService: ApiService) {}\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  convertTextToSpeech() {\n    if (!this.selectedFile) {\n      alert('Please select a file.');\n      return;\n    }\n\n    this.apiService.textToSpeech(this.selectedFile).subscribe((response: Blob) => {\n      const audioUrl = window.URL.createObjectURL(response);\n      const link = document.createElement('a');\n      link.href = audioUrl;\n      link.download = 'output.mp3';\n      link.click();\n      window.URL.revokeObjectURL(audioUrl);\n    });\n  }\n}"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,UAAU,QAAQ,gBAAgB;AAOpC,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAGZC,UAAA;EAFpBC,YAAY,GAAgB,IAAI;EAEhCC,YAAoBF,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAE7CG,cAAcA,CAACC,KAAU;IACvB,IAAI,CAACH,YAAY,GAAGG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C;EAEAC,mBAAmBA,CAAA;IACjB,IAAI,CAAC,IAAI,CAACN,YAAY,EAAE;MACtBO,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IAEA,IAAI,CAACR,UAAU,CAACS,YAAY,CAAC,IAAI,CAACR,YAAY,CAAC,CAACS,SAAS,CAAEC,QAAc,IAAI;MAC3E,MAAMC,QAAQ,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,QAAQ,CAAC;MACrD,MAAMK,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGP,QAAQ;MACpBI,IAAI,CAACI,QAAQ,GAAG,YAAY;MAC5BJ,IAAI,CAACK,KAAK,EAAE;MACZR,MAAM,CAACC,GAAG,CAACQ,eAAe,CAACV,QAAQ,CAAC;IACtC,CAAC,CAAC;EACJ;;;;;AAvBWb,qBAAqB,GAAAwB,UAAA,EALjC1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,oBAAoB;EAC9BC,QAAA,EAAAC,oBAA8C;;CAE/C,CAAC,C,EACW3B,qBAAqB,CAwBjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}